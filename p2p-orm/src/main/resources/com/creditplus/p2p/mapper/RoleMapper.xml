<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.creditplus.p2p.dao.RoleDao">
	<resultMap type="RoleVO" id="roleDetailMap">  
        <id column="role_id"    property="roleId"/>  
        <result column="enable" property="enable"/>
        <result column="role_name" property="roleName"/> 
        <result column="remark"   property="remark"/>        
        <result column="created_by" property="created_by"/>          
        <result column="created_date" property="created_date"/>          
        <result column="last_updated_by" property="last_updated_by"/>          
        <result column="last_updated_date" property="last_updated_date"/>
        <collection property="resources" ofType="ResourceVO" column="role_id">
	       <id column="resource_id" property="resourceId"/>  
	       <result column="resource_name" property="resourceName"/>
	       <result column="resource_type" property="resourceType"/>
	       <result column="priority" property="priority"/>
	       <result column="url" property="url"/>
        </collection>
    </resultMap>
    
	<resultMap type="RoleVO" id="roleVOMap">  
        <id column="role_id"    property="roleId"/>  
        <result column="enable" property="enable"/>
        <result column="role_name" property="roleName"/> 
        <result column="remark"   property="remark"/>        
        <result column="created_by" property="created_by"/>          
        <result column="created_date" property="created_date"/>          
        <result column="last_updated_by" property="last_updated_by"/>          
        <result column="last_updated_date" property="last_updated_date"/>
    </resultMap>        
    <insert id="insertRole" parameterType="RoleVO" >
       insert into role_t(role_id,enable,role_name,remark,created_by,created_date,last_updated_by,last_updated_date) 
             values(#{roleId},#{enable},#{roleName},#{remark},#{created_by},#{created_date},#{last_updated_by},now())
    </insert>
    <delete id="deleteRoleById" parameterType="Integer">
       delete from role_t where role_id=#{roleId}
    </delete>       
    <update id="updateUser" parameterType="RoleVO">
       update role_t set rolename=#{roleName}, 
                         enable=#{enable},
                         remark=#{remark},
                         last_updated_by=#{last_updated_by},
                         last_updated_date=now() 
                   where role_id=#{roleId}
    </update> 
    
   <select id="getRoleListWithPage" parameterType="String" resultMap="roleVOMap">
       select * from role_t
 		<if test="roleName !=null ">          
               where role_name = #{roleName}
       </if> 
    </select>    
   <select id="getRoleDetail" parameterType="Integer" resultMap="roleDetailMap">
    select r.*,
           res.resource_id as resource_id,
           res.resource_name as resource_name,
           res.url as url,
           res.resource_type as resource_type,
           res.priority as priority       
           from role_t r
      left join role_resource_t rr on r.role_id = rr.role_id  
      left join resource_t res on rr.resource_id = rr.resource_id 
       where r.role_id=#{roleId} 
    </select>
</mapper>