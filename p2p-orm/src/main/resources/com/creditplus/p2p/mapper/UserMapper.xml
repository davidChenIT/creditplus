<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.creditplus.p2p.dao.UserDao">
	<resultMap type="UserVO" id="userAthurityMap">  
        <id column="user_id"    property="userId"/>  
        <result column="enable" property="enable"/>
        <result column="username" property="username"/> 
        <result column="password" property="password"/>
        <result column="remark"   property="remark"/>        
        <result column="created_by" property="created_by"/>          
        <result column="created_date" property="created_date"/>          
        <result column="last_updated_by" property="last_updated_by"/>          
        <result column="last_updated_date" property="last_updated_date"/>
        <collection property="roles" ofType="RoleVO" column="user_id">  
            <id column="role_id" property="roleId"/>  
            <result column="role_name" property="roleName"/>
            <collection property="resources" ofType="ResourceVO" column="role_id">
	            <id column="resource_id" property="resourceId"/>  
	            <result column="resource_name" property="resourceName"/>
	            <result column="resource_type" property="resourceType"/>
	            <result column="priority" property="priority"/>
	            <result column="url" property="url"/>
            </collection>  
        </collection>
    </resultMap>
    
	<resultMap type="UserVO" id="userDetailMap">  
        <id column="user_id"    property="userId"/>  
        <result column="enable" property="enable"/>
        <result column="username" property="username"/> 
        <result column="password" property="password"/>
        <result column="remark"   property="remark"/>        
        <result column="created_by" property="created_by"/>          
        <result column="created_date" property="created_date"/>          
        <result column="last_updated_by" property="last_updated_by"/>          
        <result column="last_updated_date" property="last_updated_date"/>
        <collection property="roles" ofType="RoleVO" column="user_id">  
            <id column="role_id" property="roleId"/>  
            <result column="role_name" property="roleName"/>
	        <result column="created_by" property="created_by"/>          
	        <result column="created_date" property="created_date"/>            
        </collection>
    </resultMap>    
    
	<resultMap type="UserVO" id="userVOMap">  
        <id column="user_id"    property="userId"/>  
        <result column="enable" property="enable"/>
        <result column="username" property="username"/> 
        <result column="password" property="password"/>
        <result column="remark"   property="remark"/>        
        <result column="created_by" property="created_by"/>          
        <result column="created_date" property="created_date"/>          
        <result column="last_updated_by" property="last_updated_by"/>          
        <result column="last_updated_date" property="last_updated_date"/>
    </resultMap>
          
    <insert id="insertUser" parameterType="UserVO">
       insert into user_t(user_id,enable,username, password,remark,created_by,created_date,last_updated_by,last_updated_date) 
             values(#{userId},#{enable},#{username},#{password},#{remark},#{created_by},#{created_date},#{last_updated_by},now())
    </insert>
    
    <delete id="deleteUserById" parameterType="java.util.List">
       delete from user_t where user_id in
 		<foreach collection="list" item="userId" index="index"
            open="(" close=")" separator=",">        
         	#{userId} 
 		</foreach>     	
    </delete>   
   
    <update id="updateUser" parameterType="UserVO">
       update user_t set username=#{username}, 
        		<if test="password !=null ">  
                         password=#{password},
                </if>         
                         enable=#{enable},
                         remark=#{remark},
                         last_updated_by=#{last_updated_by},
                         last_updated_date=now() 
                   where user_id=#{userId}
    </update>
    
    <update id="changePassword" parameterType="UserVO">
       update user_t set password=#{password},
                         last_updated_by=#{last_updated_by},
                         last_updated_date=now() 
                   where user_id=#{userId}
    </update>    
   
    <select id="getUserById" parameterType="Integer" resultMap="userDetailMap">
       		   select u.*,
		              r.role_id as role_id,
		              r.role_name as role_name,
		              ur.created_by   as created_by,
		              ur.created_date as created_date
                 from user_t u 
            left join user_role_t ur on u.user_id = ur.user_id 
            left join role_t r on ur.role_id = r.role_id 
                where u.user_id=#{userId}
    </select>
    
    <select id="findByName" parameterType="String" resultMap="userAthurityMap">
		       select u.*,
		              r.role_id as role_id,
		              r.role_name as role_name,
		              rr.resource_id as resource_id,
		              c.catalog_name as resource_name,
		              c.url as url,
		              1 as resource_type,
		              1 as priority
                 from user_t u 
            left join user_role_t ur on u.user_id = ur.user_id 
            left join role_t r on ur.role_id = r.role_id 
            left join role_resource_t rr on r.role_id = rr.role_id  
            left join catalog_t c on rr.resource_id = c.catalog_id             
                where username=#{username}
    </select>
   <select id="getUserListWithPage" parameterType="UserVO" resultMap="userVOMap">
       		   select u.*
                 from user_t u
 		<if test="username !=null ">  
                where lower(u.username) LIKE CONCAT(CONCAT('%', lower(#{username, jdbcType=VARCHAR})),'%')  
    	</if>       
    </select>
    
    <select id="getUserRoleListByUserID" parameterType="Integer" resultType="java.util.Map" >
      		   select ur.role_id as roleId,
      		          ur.start_date as start_date,
      		          ur.end_date   as end_date
                 from user_role_t ur
		         where ur.user_id=#{userId}
    </select>
    
    <delete id="deleteUserRoleByUserId" parameterType="Integer">
       delete from user_role_t  where user_id=#{userId}
    </delete>
    <insert id="insertUserRole" parameterType="java.util.List">
       insert into user_role_t(ur_id,user_id,role_id,start_date,end_date,created_by,created_date,last_updated_by,last_updated_date) 
             values
	    <foreach collection="list" item="item" index="index" separator="," >  
             (#{item.ur_id},#{item.userId},#{item.roleId},#{item.start_date},#{item.end_date},#{item.created_by},#{item.created_date},#{item.last_updated_by},now())
        </foreach>
    </insert>
</mapper>