<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"         
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop.xsd           
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd ">         
     

     <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="systemPrereqs">
       <property name="transactionManager" ref="jbossTransactionManager"/>
       <property name="userTransaction" ref="jbossUserTransaction"/>
     </bean> 

     <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
        <tx:attributes> 
            <tx:method name="add*" propagation="REQUIRED"   rollback-for="Exception" /> 
            <tx:method name="delete*" propagation="REQUIRED"   rollback-for="Exception"/> 
            <tx:method name="update*" propagation="REQUIRED"   rollback-for="Exception"/> 
            <tx:method name="insert*" propagation="REQUIRED"    rollback-for="Exception" /> 
            <tx:method name="getCredit*" propagation="REQUIRED"   rollback-for="Exception"/> 
            <tx:method name="credit*" propagation="REQUIRED"   rollback-for="Exception"/> 
        </tx:attributes>
    </tx:advice> 
 
    <aop:config> 
        <aop:pointcut id="pointCut" expression="execution(* com.creditplus.p2p.service.*.*(..))" /> 
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut" /> 
    </aop:config>   
    
    <context:annotation-config  />
    <!-- <context:component-scan base-package="com.creditplus.p2p" />  
    <tx:annotation-driven transaction-manager="transactionManager" /> -->              
    <bean id="userService" class=" com.creditplus.p2p.service.impl.UserServiceImpl" />
    <bean id="roleService" class=" com.creditplus.p2p.service.impl.RoleServiceImpl" />
    <bean id="resourceService" class=" com.creditplus.p2p.service.impl.ResourceServiceImpl" />    
    <bean id="catalogService"  class=" com.creditplus.p2p.service.impl.CatalogServiceImpl" />    
    <bean id="dictService"     class=" com.creditplus.p2p.service.impl.DictServiceImpl" />  
    <bean id="loanOrderService" class="com.creditplus.p2p.service.impl.LoanOrderServiceImpl" />
    <bean id="approveLogService" class="com.creditplus.p2p.service.impl.ApproveLogServiceImpl" />     
    <bean id="urgentContactorService" class="com.creditplus.p2p.service.impl.UrgentContactorServiceImpl" />     
    <bean id="commonInfoService" class="com.creditplus.p2p.service.impl.CommonInfoServiceImpl" />     
    <bean id="cheatInterceptService" class="com.creditplus.p2p.service.impl.CheatInterceptServiceImpl" />     
    <bean id="ruleService" class="com.creditplus.p2p.service.impl.RuleServiceImpl" />     
    <bean id="originPlaceService" class="com.creditplus.p2p.service.impl.OriginPlaceServiceImpl" />     
    <bean id="creditScoreService" class="com.creditplus.p2p.service.impl.CreditScoreServiceImpl" />     
    <bean id="highSchoolService" class="com.creditplus.p2p.service.impl.HighSchoolServiceImpl" />     
    <bean id="contractService" class="com.creditplus.p2p.service.impl.ContractServiceImpl" />
    
    <bean id="redisService" class="com.creditplus.p2p.service.impl.RedisService" />
    
    <!-- redis配置 -->
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">  
       <constructor-arg index="0" ref="jedisPoolConfig"/>  
       <constructor-arg index="1">  
           <list>  
                <bean name="master" class="redis.clients.jedis.JedisShardInfo">  
                   <constructor-arg index="0" value="${redis.master.host}"/>  
                   <constructor-arg index="1" value="${redis.master.port}" type="int"/>  
               </bean>  
           </list>  
       </constructor-arg>  
   </bean>  
  
   <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
       <property name="maxTotal" value="2048" />  
       <property name="maxIdle" value="200" />  
       <property name="numTestsPerEvictionRun" value="1024"/>  
       <property name="timeBetweenEvictionRunsMillis" value="30000" />  
       <property name="minEvictableIdleTimeMillis" value="-1" />  
       <property name="softMinEvictableIdleTimeMillis" value="10000" />  
       <property name="maxWaitMillis" value="1500"/>  
       <property name="testOnBorrow" value="true" />  
       <property name="testWhileIdle" value="true"/>  
       <property name="testOnReturn" value="false"/>  
       <property name="jmxEnabled" value="true"/>  
       <property name="jmxNamePrefix" value="youyuan"/>  
       <property name="blockWhenExhausted" value="false"/>  
   </bean> 
   
   <!-- 定义一个定时任务bean -->
   <bean id="myTask1" class="com.creditplus.p2p.service.quartz.impl.MyTask1"></bean>
    
    <!-- 将需要执行的定时任务注入JOB中。 -->
    <bean id="myJob1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="myTask1"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="printMessage"></property>
        <!-- 上一次未执行完成的，要等待有再执行。 -->
        <property name="concurrent" value="false"></property>
    </bean>

    <!-- 基本的定时器，会绑定具体的任务。 -->
    <bean id="myTrigger1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="myJob1"></property>
        <property name="startDelay" value="3000"></property>
        <property name="repeatInterval" value="300000"></property>
    </bean>
    
    
    <bean id="myTask2" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.creditplus.p2p.service.quartz.impl.MyTask2"></property>
        <property name="durability" value="true"></property>
    </bean>

    <bean id="myTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="myTask2" />
        <property name="cronExpression" value="0 0/5 * * * ?"></property>
    </bean>
    
    
    <!-- 调度器 -->
    <bean id="schedulerFactoryBean1" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="myTrigger1"></ref>
                <ref bean="myTrigger2"></ref>
            </list>
        </property>
    </bean>
</beans>